{"version":3,"sources":["components/Header/Header.js","components/loader.js","components/Posts/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","auth","useContext","Context","useAuthState","user","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","console","log","className","style","height","to","src","photoURL","alt","borderRadius","width","displayName","onClick","signOut","type","Loader","Posts","firestore","useState","value","setValue","titleValue","setTitleValue","titleValueChanger","setTitleValueChanger","valueChanger","setValueChanger","useCollectionData","collection","orderBy","posts","loading","get","then","snapshot","docs","forEach","doc","id","update","docToken","postMessage","e","inputTitle","target","closest","querySelector","inputMessage","length","add","uid","email","title","text","createdAt","FieldValue","serverTimestamp","classList","remove","alert","deletePost","postToken","getAttribute","delete","updatePost","inputBlock","postTitle","postText","onChange","event","placeholder","map","post","index","position","top","right","fontSize","data-id","toggle","aria-label","bottom","left","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.3ae5b6db.chunk.js","sourcesContent":["import React, {useContext} from 'react'\r\nimport {Route} from \"react-router-dom\";\r\nimport {Context} from \"../../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Header = (props) => {\r\n  const {auth} = useContext(Context)\r\n  const [user] = useAuthState(auth);\r\n  const login = async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider()\r\n    const {user} = await auth.signInWithPopup(provider)\r\n    console.log(user)\r\n  }\r\n  return (\r\n    <nav className=\"container navbar navbar-light justify-content-between\" style={{height:'66px'}}>\r\n      <Route to={'/'} className=\"navbar-brand\">\r\n\r\n        {user ?\r\n          <div>\r\n          <span className=\"mr-2\"><img src={user.photoURL} alt={user.photoURL} style={{borderRadius: '50%', width:'50px', height:'50px'}}/></span>\r\n          <span>{user.displayName}</span>\r\n          </div>\r\n          :\r\n          <span>Пользователь не автоизован</span>\r\n        }\r\n\r\n      </Route>\r\n      {user ?\r\n        <button onClick={() => auth.signOut()} className=\"btn btn-outline-danger my-2 my-sm-0\" type=\"submit\">Sign out</button>\r\n      :\r\n        <button onClick={login} className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Sign in</button>\r\n      }\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return <div className=\"loader\"></div>\r\n};\r\n\r\nexport default Loader;","import React, {useContext, useState} from \"react\"\r\nimport {Context} from \"../../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport Loader from \"../loader\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Posts = () => {\r\n  const {auth, firestore} = useContext(Context)\r\n  const [user] = useAuthState(auth);\r\n  const [value, setValue] = useState('')\r\n  const [titleValue, setTitleValue] = useState('')\r\n  const [titleValueChanger, setTitleValueChanger] = useState('')\r\n  const [valueChanger, setValueChanger] = useState('')\r\n  const [posts, loading] = useCollectionData(\r\n    firestore.collection('posts').orderBy('createdAt')\r\n  )\r\n\r\n  firestore.collection('posts').get().then((snapshot) => {\r\n    snapshot.docs.forEach(doc => {\r\n      firestore.collection('posts').doc(doc.id).update({\r\n        docToken: doc.id\r\n      })\r\n    })\r\n  })\r\n\r\n  const postMessage = async (e) => {\r\n    if (user) {\r\n      const inputTitle = e.target.closest('.input-group').querySelector('.input-title');\r\n      const inputMessage = e.target.closest('.input-group').querySelector('.input-message');\r\n\r\n      if (value.length > 0 && titleValue.length > 0) {\r\n        firestore.collection('posts').add({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          photoURL: user.photoURL,\r\n          email: user.email,\r\n          title: titleValue,\r\n          text: value,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setValue('')\r\n        setTitleValue('')\r\n\r\n        inputMessage.classList.remove('alert-danger');\r\n        inputMessage.classList.remove('alert-success');\r\n        inputTitle.classList.remove('alert-danger');\r\n        inputTitle.classList.remove('alert-success');\r\n      } else {\r\n        if (inputTitle.value.length < 1) {\r\n          inputTitle.classList.add('alert-danger');\r\n        } else {\r\n          inputTitle.classList.add('alert-success');\r\n        }\r\n\r\n        if (inputMessage.value.length < 1) {\r\n          inputMessage.classList.add('alert-danger');\r\n        } else {\r\n          inputMessage.classList.add('alert-success');\r\n        }\r\n      }\r\n    } else {\r\n      alert('Авторизуйтесь, пожалуйста')\r\n    }\r\n  }\r\n\r\n  const deletePost = async (e) => {\r\n    let postToken = e.target.getAttribute('data-id');\r\n    firestore.collection('posts').doc(postToken).delete();\r\n  }\r\n\r\n  const updatePost = async (e) => {\r\n    const postToken = e.target.getAttribute('data-id');\r\n    const inputBlock = e.target.closest('.jumbotron').querySelector('.input-group__doc-change');\r\n    let postTitle = e.target.closest('.jumbotron').querySelector('.input-title').value;\r\n    let postText = e.target.closest('.jumbotron').querySelector('.input-message').value;\r\n\r\n    firestore.collection('posts').doc(postToken).update({\r\n      title: postTitle,\r\n      text: postText,\r\n    });\r\n\r\n    inputBlock.classList.remove('active')\r\n    setValueChanger('')\r\n    setTitleValueChanger('')\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"input-group mb-2\">\r\n        <input type=\"text\" className=\"form-control input-title\" style={{width:'25%',borderRadius:'.25rem 0 0 .25rem'}} onChange={event => setTitleValue(event.target.value)} value={titleValue} placeholder=\"Title\"/>\r\n        <input type=\"text\" className=\"form-control input-message mr-2\" style={{width:'65%',borderRadius:'0 .25rem .25rem 0'}} onChange={event => setValue(event.target.value)} value={value} placeholder=\"Message\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"button\" onClick={(e) => postMessage(e)}>Add post</button>\r\n      </div>\r\n      <div>\r\n        { posts.length ?\r\n          posts.map((post, index) =>\r\n            <div className=\"jumbotron position-relative\" key={index}>\r\n              <h1 className=\"display-4\">{post.title}</h1>\r\n              <p className=\"lead\">{post.text}</p>\r\n              <hr className=\"my-4\"/>\r\n              <p>Author: {post.displayName} / {post.email}</p>\r\n              { user && user.uid === post.uid ?\r\n                <div className=\"d-flex justify-content-end\" style={{position:'absolute',top:'1rem',right:'1rem'}}>\r\n                  <button type=\"button\" className=\"close mr-2\" style={{fontSize: '1rem'}} data-id={post.docToken} onClick={(e) => e.target.closest('.jumbotron').querySelector('.input-group__doc-change').classList.toggle('active')} aria-label=\"Close\">\r\n                    change\r\n                  </button>\r\n                  <button type=\"button\" className=\"close\" style={{fontSize: '1rem'}} data-id={post.docToken} onClick={(e) => deletePost(e)} aria-label=\"Close\">\r\n                    delete\r\n                  </button>\r\n                </div>\r\n                :\r\n                false\r\n              }\r\n              <div className=\"input-group m-2 position-absolute input-group__doc-change\" style={{bottom:'0',left:'0'}}>\r\n                <input type=\"text\" className=\"form-control input-title\" style={{width:'25%',borderRadius:'.25rem 0 0 .25rem'}} onChange={event => setTitleValueChanger(event.target.value)} value={titleValueChanger} placeholder=\"Title\"/>\r\n                <input type=\"text\" className=\"form-control input-message mr-2\" style={{width:'65%',borderRadius:'0 .25rem .25rem 0'}} onChange={event => setValueChanger(event.target.value)} value={valueChanger} placeholder=\"Message\"/>\r\n                <button className=\"btn btn-outline-success\" type=\"button\" data-id={post.docToken} onClick={(e) => updatePost(e)}>Update</button>\r\n              </div>\r\n            </div>\r\n          )\r\n          :\r\n          <div className=\"text-center font-italic m-5\">Нет постов</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts","import './App.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport AppRouter from \"./AppRouter\";\r\nimport {useContext} from \"react\";\r\nimport {Context} from \"./index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport Loader from \"./components/loader\";\r\nimport Posts from \"./components/Posts/Posts\";\r\n\r\nconst App = () => {\r\n  const {auth} = useContext(Context)\r\n  const [user, loading, error] = useAuthState(auth)\r\n\r\n  if (loading) {\r\n    return <Loader/>\r\n  }\r\n  return (\r\n    <BrowserRouter>\r\n      <Header/>\r\n      <Posts/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, {createContext} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport firebase from \"firebase\";\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nfirebase.initializeApp(\r\n    {\r\n        apiKey: \"AIzaSyA06wnl2Mdgdm-uHrSG_gG6wiw797UFf5k\",\r\n        authDomain: \"react-blog-7b6ce.firebaseapp.com\",\r\n        projectId: \"react-blog-7b6ce\",\r\n        storageBucket: \"react-blog-7b6ce.appspot.com\",\r\n        messagingSenderId: \"356829308813\",\r\n        appId: \"1:356829308813:web:612d09ca31303ee9157fc4\",\r\n        measurementId: \"G-TZFT6FGHBX\"\r\n    }\r\n);\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nexport const Context = createContext(null);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Context.Provider value={{auth, firebase, firestore}}>\r\n          <App />\r\n      </Context.Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}